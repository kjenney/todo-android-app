name: Build Signed Release APK

# This workflow builds a signed release APK
# It only runs on tags (e.g., v1.0.0) for releases
# Requires keystore secrets to be configured in GitHub repo settings

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          if [ -n "$ENCODED_STRING" ]; then
            echo $ENCODED_STRING | base64 -di > app/keystore.jks
            echo "KEYSTORE_EXISTS=true" >> $GITHUB_ENV
          else
            echo "KEYSTORE_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Build Signed Release APK
        if: env.KEYSTORE_EXISTS == 'true'
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
        run: |
          ./gradlew assembleRelease \
            -Pandroid.injected.signing.store.file=$(pwd)/app/keystore.jks \
            -Pandroid.injected.signing.store.password=$SIGNING_STORE_PASSWORD \
            -Pandroid.injected.signing.key.alias=$SIGNING_KEY_ALIAS \
            -Pandroid.injected.signing.key.password=$SIGNING_KEY_PASSWORD

      - name: Build Unsigned Release APK (fallback)
        if: env.KEYSTORE_EXISTS != 'true'
        run: ./gradlew assembleRelease

      - name: Upload Signed Release APK
        uses: actions/upload-artifact@v4
        if: env.KEYSTORE_EXISTS == 'true'
        with:
          name: todo-app-release-signed
          path: app/build/outputs/apk/release/app-release.apk
          retention-days: 90

      - name: Upload Unsigned Release APK
        uses: actions/upload-artifact@v4
        if: env.KEYSTORE_EXISTS != 'true'
        with:
          name: todo-app-release-unsigned
          path: app/build/outputs/apk/release/app-release-unsigned.apk
          retention-days: 90

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: app/build/outputs/apk/release/app-release*.apk
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean up keystore
        if: always()
        run: rm -f app/keystore.jks
